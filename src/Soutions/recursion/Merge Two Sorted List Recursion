/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {



        ListNode newList = new ListNode(-1);
        ListNode pointer = newList;

       merge(pointer , l1 , l2);


        return newList.next;
    }

    public void merge(ListNode p , ListNode l1 , ListNode l2){
        // Base Case(s)

        // First
        if(l1 == null && l2==null ) return ;

        // Second
        if(l1 == null) {
            p.next = l2;
            return;
        }

        // Third
        if(l2 == null){
            p.next = l1;
            return;
        }

        // Recursion Part :
        if(l1.val <= l2.val){
            p.next = l1;
            merge(p.next , l1.next , l2);
        }else {
            p.next = l2;
            merge(p.next , l1 , l2.next);
        }
    }

}