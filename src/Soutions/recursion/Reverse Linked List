/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
      // Some Edge Cases:
        if(head == null) return null;
        if(head.next == null) return head;

        ListNode dummy = new ListNode(50001 , null);
        head = reverse(dummy , head , head.next);
        ListNode newPtr = head;
        while(newPtr.next.val != 50001){
            newPtr = newPtr.next;
        }
        newPtr.next = null;
        return head;
    }

    public ListNode reverse(ListNode start , ListNode h , ListNode second){
        if(h.next == null){
            h.next = start;
            return h;
        }
        h.next = start;
        return reverse(h , second , second.next);

    }
}