There are mainly two parts of the space consumption,
that one should bear in mind when calculating the space complexity of a recursive algorithm:
1- recursion related
2- non-recursion related space.

-- Recursion Related Space --
The recursion related space refers to the memory cost that is incurred directly by the recursion,
i.e. the stack to keep track of recursive function calls.

-- Information that hold by the Stack --
1- The returning address of the function call. Once the function call is completed,
    the program must know where to return to, i.e. the line of code after the function call.

2- The parameters that are passed to the function call.

3- The local variables within the function call.


*** This space in the stack is the minimal cost that is incurred during a function call.
However, once the function call is done, this space is freed. ***



-- Non-Recursion Related Space --
As suggested by the name, the non-recursion related space refers to the memory space that is not directly related to recursion,
which typically includes the space (normally in heap) that is allocated for the global variables.

like : Memoization Cache "Global Variable" not related to any recursion function.

